@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;
@font-face {
  font-family: "fontawesome";
  font-weight: normal;
  font-style: normal;
  src: url("/fonts/fontawesome/fa-solid.ttf") format("truetype");
}
:root {
  @apply font-["montserrat"] m-0 p-8 bg-neutral-300 text-neutral-900;
}

body {
  @apply absolute inset-0 m-0 p-2;
}

*, *::before, *::after {
  @apply box-border m-0 p-0;
}

@layer base {
  .intention_default {
    --color-50: theme("colors.neutral.50");
    --color-100: theme("colors.neutral.100");
    --color-200: theme("colors.neutral.200");
    --color-300: theme("colors.neutral.300");
    --color-400: theme("colors.neutral.400");
    --color-500: theme("colors.neutral.500");
    --color-600: theme("colors.neutral.600");
    --color-700: theme("colors.neutral.700");
    --color-800: theme("colors.neutral.800");
    --color-900: theme("colors.neutral.900");
    --color-950: theme("colors.neutral.950");
  }
  .intention_primary {
    --color-50: theme("colors.blue.50");
    --color-100: theme("colors.blue.100");
    --color-200: theme("colors.blue.200");
    --color-300: theme("colors.blue.300");
    --color-400: theme("colors.blue.400");
    --color-500: theme("colors.blue.500");
    --color-600: theme("colors.blue.600");
    --color-700: theme("colors.blue.700");
    --color-800: theme("colors.blue.800");
    --color-900: theme("colors.blue.900");
    --color-950: theme("colors.blue.950");
  }
  .intention_secondary {
    --color-50: theme("colors.indigo.50");
    --color-100: theme("colors.indigo.100");
    --color-200: theme("colors.indigo.200");
    --color-300: theme("colors.indigo.300");
    --color-400: theme("colors.indigo.400");
    --color-500: theme("colors.indigo.500");
    --color-600: theme("colors.indigo.600");
    --color-700: theme("colors.indigo.700");
    --color-800: theme("colors.indigo.800");
    --color-900: theme("colors.indigo.900");
    --color-950: theme("colors.indigo.950");
  }
  .intention_success {
    --color-50: theme("colors.green.50");
    --color-100: theme("colors.green.100");
    --color-200: theme("colors.green.200");
    --color-300: theme("colors.green.300");
    --color-400: theme("colors.green.400");
    --color-500: theme("colors.green.500");
    --color-600: theme("colors.green.600");
    --color-700: theme("colors.green.700");
    --color-800: theme("colors.green.800");
    --color-900: theme("colors.green.900");
    --color-950: theme("colors.green.950");
  }
  .intention_warning {
    --color-50: theme("colors.yellow.50");
    --color-100: theme("colors.yellow.100");
    --color-200: theme("colors.yellow.200");
    --color-300: theme("colors.yellow.300");
    --color-400: theme("colors.yellow.400");
    --color-500: theme("colors.yellow.500");
    --color-600: theme("colors.yellow.600");
    --color-700: theme("colors.yellow.700");
    --color-800: theme("colors.yellow.800");
    --color-900: theme("colors.yellow.900");
    --color-950: theme("colors.yellow.950");
  }
  .intention_error {
    --color-50: theme("colors.red.50");
    --color-100: theme("colors.red.100");
    --color-200: theme("colors.red.200");
    --color-300: theme("colors.red.300");
    --color-400: theme("colors.red.400");
    --color-500: theme("colors.red.500");
    --color-600: theme("colors.red.600");
    --color-700: theme("colors.red.700");
    --color-800: theme("colors.red.800");
    --color-900: theme("colors.red.900");
    --color-950: theme("colors.red.950");
  }
  .intention_info {
    --color-50: theme("colors.blue.50");
    --color-100: theme("colors.blue.100");
    --color-200: theme("colors.blue.200");
    --color-300: theme("colors.blue.300");
    --color-400: theme("colors.blue.400");
    --color-500: theme("colors.blue.500");
    --color-600: theme("colors.blue.600");
    --color-700: theme("colors.blue.700");
    --color-800: theme("colors.blue.800");
    --color-900: theme("colors.blue.900");
    --color-950: theme("colors.blue.950");
  }
}
@layer components {
  .rounded-row * {
    @apply rounded-s-none rounded-e-none;
  }
  .rounded-row > :first-child:not(:last-child) {
    @apply rounded-s rounded-e-none;
  }
  .rounded-row > :last-child:not(:first-child) {
    @apply rounded-e rounded-s-none;
  }
  .rounded-row > :first-child:last-child {
    @apply rounded-s rounded-e;
  }
  .rounded-row-full * {
    @apply rounded-s-none rounded-e-none;
  }
  .rounded-row-full > :first-child:not(:last-child) {
    @apply rounded-s-full rounded-e-none;
  }
  .rounded-row-full > :last-child:not(:first-child) {
    @apply rounded-e-full rounded-s-none;
  }
  .rounded-row-full > :first-child:last-child {
    @apply rounded-s-full rounded-e-full;
  }
  .rounded-col * :first-child:not(:last-child) {
    @apply rounded-t rounded-b-none;
  }
  .rounded-col > :first-child:not(:last-child) {
    @apply rounded-t rounded-b-none;
  }
  .rounded-col > :last-child:not(:first-child) {
    @apply rounded-b rounded-t-none;
  }
  .rounded-col > :first-child:last-child {
    @apply rounded-t rounded-b;
  }
  .rounded-col-full * {
    @apply rounded-t-none rounded-b-none;
  }
  .rounded-col-full > :first-child:not(:last-child) {
    @apply rounded-t-full rounded-b-none;
  }
  .rounded-col-full > :last-child:not(:first-child) {
    @apply rounded-b-full rounded-t-none;
  }
  .rounded-col-full > :first-child:last-child {
    @apply rounded-t-full rounded-b-full;
  }
}/*# sourceMappingURL=index.css.map */